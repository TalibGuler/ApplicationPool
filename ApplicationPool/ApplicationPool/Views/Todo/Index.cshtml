@model List<ToDoModel>

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" />
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
</head>

<body>
    <h1>Todo list</h1>
    <form>
        <input type="text" class="todo-input">
        <button class="todo-button" type="submit" style="padding: 2rem;"><i class="fas fa-plus"></i></button>
    </form>
    <div class="todo-container">
        <ul class="todo-list">
            @foreach (var todo in Model)
            {
                <div key="@todo.Id" class="todo">
                <li class="todo-item">@todo.Name</li>
                <button class="complete-btn"><i class="fas fa-check"></i></button>
                <button class="trash-btn"><i class="fas fa-trash"></i></button>
                </div>
            }
            </ul>
            </div>

        </body>

        <script>

            //selectors
            const todoInput = document.querySelector(".todo-input");
            const todoButton = document.querySelector(".todo-button");
            const todoList = document.querySelector(".todo-list");

            //event listeners
            todoButton.addEventListener("click", addTodo);
            todoList.addEventListener("click", deleteCheck);

            //functions
          async  function addTodo(event) {
                event.preventDefault();//prevent form from submitting
                const model = {name: todoInput.value}
              const res = await fetch('https://localhost:5001/api/todo', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(model)
                });
              if (res.status != 200) {
                  return;
              }
                const data = await res.json();
                console.log(data)
                
                //Todo DIV
                const todoDiv = document.createElement("div");
              todoDiv.classList.add("todo");
              todoDiv.setAttribute("key",data.id)

                //create li
              const newTodo = document.createElement("li");
              newTodo.innerText = data.name;
                newTodo.classList.add("todo-item");
                todoDiv.appendChild(newTodo);

                //checked/ task complete button
                const completedButton = document.createElement("button");
                completedButton.innerHTML = '<i class="fas fa-check"></i>';
                completedButton.classList.add("complete-btn");
                todoDiv.appendChild(completedButton);

                //delete button
                const trashButton = document.createElement("button");
                trashButton.innerHTML = '<i class="fas fa-trash"></i>';
                trashButton.classList.add("trash-btn");
                todoDiv.appendChild(trashButton);

                //APPEND TODO TO THE LIST
                todoList.appendChild(todoDiv);

                //clear todo input
                todoInput.value = "";
            }

            async function deleteCheck(e) {

                const id = e.target.parentElement.getAttribute("key")
                const res = await fetch('https://localhost:5001/api/todo/' + id, {
                    method: 'DELETE'
                });
                if (res.status != 200) {
                    return;
                }
                const item = e.target; //get the item we are clicking on
                //DELETE TODO
                if (item.classList[0] === "trash-btn") {
                    const todo = item.parentElement;
                    //animation
                    todo.classList.add("fall");
                    //delete when animation ends
                    todo.addEventListener("transitionend", function () {
                        todo.remove();
                    });
                }

                //CHECK MARK
                if (item.classList[0] === "complete-btn") {
                    const todo = item.parentElement;
                    todo.classList.toggle("completed");
                }
            }


        </script>


        @section Styles {
            <link href="/css/todo.css" rel="stylesheet" />
        }